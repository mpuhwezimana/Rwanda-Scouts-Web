<div class="container">
  <%= button_to "New Troop", "/troops/new", method: :get, :data => {:confirm => 'Are you sure?'} %>
  <table>
    <tr>
      <td>Name</td>
      <td>Address</td>
      <td>Contacts</td>
      <td>Latitude</td>
      <td>Longitude</td>
    </tr>
    <% @troops.each do |troop|%>
      <tr>
          <td><%= link_to troop.name, "/troops/#{troop.id}" %></td>
          <td><%= troop.address %></td>
          <td><%= troop.contacts %></td> 
          <td><%= troop.latitude %></td>
          <td><%= troop.longitude %></td>
      </tr>
    <% end %>
  </table>
  <!-- <script src="//maps.google.com/maps/api/js?key=AIzaSyCvVuO8OYAUq-Vw14L5om_f97rmWb368qQ , AIzaSyCyk-D8ybNMM6b4VUPyaRAHwxntxO9dxyE"></script> -->

  <!DOCTYPE html>
  <html>
    <head>
      <title>PlaceID Geocoder</title>
      <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
      <meta charset="utf-8">
      <style>
        /* Always set the map height explicitly to define the size of the div
         * element that contains the map. */
        #map {
          height: 500px;
          width: 1000px;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
          height: 100%;
          margin: 0;
          padding: 0;
        }
        .controls {
          background-color: #fff;
          border-radius: 2px;
          border: 1px solid transparent;
          box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
          box-sizing: border-box;
          font-family: Roboto;
          font-size: 15px;
          font-weight: 300;
          height: 29px;
          margin-left: 17px;
          margin-top: 10px;
          outline: none;
          padding: 0 11px 0 13px;
          text-overflow: ellipsis;
          width: 400px;
        }

        .controls:focus {
          border-color: #4d90fe;
        }
        .title {
          font-weight: bold;
        }
        #infowindow-content {
          display: none;
        }
        #map #infowindow-content {
          display: inline;
        }

      </style>
    </head>
    <body>
      <input id="pac-input" class="controls" type="text"
          placeholder="Enter a location">
      <div id="map"></div>
      <div id="infowindow-content">
        <span id="place-name"  class="title"></span><br>
        Place ID <span id="place-id"></span><br>
        <span id="place-address"></span>
      </div>

      <script>
        // This sample uses the Place Autocomplete widget requesting only a place
        // ID to allow the user to search for and locate a place. The sample
        // then reverse geocodes the place ID and displays an info window
        // containing the place ID and other information about the place that the
        // user has selected.

        // This example requires the Places library. Include the libraries=places
        // parameter when you first load the API. For example:
        // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

        function initMap() {
          var map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: -1.9719729, lng: 30.106111800000008},
            zoom: 9
          });

          <% @troops.each do |troop|%>;
          
            var troop = {lat: <%=troop.latitude.to_f%>, lng: <%=troop.longitude.to_f%>};

            var marker = new google.maps.Marker({
              position: troop,
              map: map,
              title: '<%= troop.name %>'
            });

            var infowindow = new google.maps.InfoWindow({
              content: 'I like scouting'
            });

            infoWindow.open(map.gMap, marker);

          <% end %>;


          var input = document.getElementById('pac-input');

          var autocomplete = new google.maps.places.Autocomplete(
              input, {placeIdOnly: true});
          autocomplete.bindTo('bounds', map);

          map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

          var infowindow = new google.maps.InfoWindow();
          var infowindowContent = document.getElementById('infowindow-content');
          infowindow.setContent(infowindowContent);
          var geocoder = new google.maps.Geocoder;
          var marker = new google.maps.Marker({
            map: map
          });
          marker.addListener('click', function() {
            infowindow.open(map, marker);
          });

          autocomplete.addListener('place_changed', function() {
            infowindow.close();
            var place = autocomplete.getPlace();

            if (!place.place_id) {
              return;
            }
            geocoder.geocode({'placeId': place.place_id}, function(results, status) {

              if (status !== 'OK') {
                window.alert('Geocoder failed due to: ' + status);
                return;
              }
              map.setZoom(11);
              map.setCenter(results[0].geometry.location);
              // Set the position of the marker using the place ID and location.
              marker.setPlace({
                placeId: place.place_id,
                location: results[0].geometry.location
              });
              marker.setVisible(true);
              infowindowContent.children['place-name'].textContent = place.name;
              infowindowContent.children['place-id'].textContent = place.place_id;
              infowindowContent.children['place-address'].textContent =
                  results[0].formatted_address;
              infowindow.open(map, marker);
            });
          });
        }
      </script>
      <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCyk-D8ybNMM6b4VUPyaRAHwxntxO9dxyE&libraries=places&callback=initMap"
          async defer></script>
    </body>
  </html>
</div>